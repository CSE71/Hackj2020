----------------------------------------------------------------------------------------------------------
@Sayak
Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice
----------------------------------------------------------------------------------------------------------



class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        // int[] afrmtv =new int[2]; 
        // for(int i=0;i<nums.length;i++)
        // {
        //     for(int j=i;j<nums.length;j++)
        //     {
        //         if(nums[i]+nums[j]==target){afrmtv[0]=i;afrmtv[1]=j;break;}
        //     }
        // }return afrmtv;
 
 
        int delta;
        Map<Integer,Integer> visitedNumbers=new HashMap<>();
        for(int i=0;i<nums.length;i++)            //0,1,2, 3
        {                                         //2,7,11,15
            delta=target-nums[i];
            if(visitedNumbers.containsKey(delta))
            {
                return new int[]{visitedNumbers.get(delta),i};
            }
            visitedNumbers.put(nums[i],i);
        }
        return new int[]{-1,-1};
    }
}
