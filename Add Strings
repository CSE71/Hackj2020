Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.

You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.

 

Example 1:

Input: num1 = "11", num2 = "123"
Output: "134"
Example 2:

Input: num1 = "456", num2 = "77"
Output: "533"
Example 3:

Input: num1 = "0", num2 = "0"
Output: "0"



class Solution {
    public String addStrings(String num1, String num2) {
        
//         Basic Approach
//         int sum = Integer.valueOf(num1) + Integer.valueOf(num2);
        
//         return sum+"";
        
//         SDE Approach
        
          StringBuilder sb = new StringBuilder();

          int i = num1.length()-1;
          int j = num2.length()-1;
          int carry = 0;

          while(i>=0 || j>=0){
              int sum = carry;
              if(i>=0){
                  sum+=num1.charAt(i--) - '0';
              }
              if(j>=0){
                  sum+=num2.charAt(j--) - '0';
              }

              sb.append(sum%10); //If sum > 10 then edge cases need to be handled this way 
              carry = sum/10;
          }

          if(carry!=0){
              sb.append(carry);
          }

          return sb.reverse().toString();
        
    }
}
